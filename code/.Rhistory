#   ylim(0,1250)+
#   theme(axis.text.x = element_text(angle = 30, hjust =1),
#         plot.background = element_rect(fill = "#fcfff9"),
#          panel.background = element_rect(fill = "#fcfff9"),
#         panel.grid.major = element_line(size=.1,colour = "black"),
#         panel.grid.minor = element_line(size=.1,colour = "black"),
#         panel.grid.major.x = element_blank(),
#         panel.grid.minor.x = element_blank())+
#   labs(
#     title = 'Distirution of HHI Menu Options Selected per Call with Corresponding Button',
#     x = 'HHI Menu Options',
#     y='Number of Times Selected'
#   )
#STARTING HERE IS FOR UNIQUE CALLERS
# filtering out top Menu keys
top_menu <-filter(log_data, grepl("TOP MENU",logInfo))
library(tidyverse)
library(dplyr)
library(stringr)
library(svMisc)
library(ggplot2)
library(gtable)
library("ggpubr")
log_data <- read_csv("~/Desktop/PAE/github/data/logData.csv")
#log_data <- read_csv("~/Desktop/PAE/github/data/benData_weakCallers.csv")
log_data_saver <- log_data
log_data <- unique(log_data)
log_data$logInfo <- str_replace(log_data$logInfo, "  ", " ")
#MAKE IT ALL UPPER!!!
log_data$logInfo <- toupper(log_data$logInfo)
### GETTING THE DATE MONTH AND YEAR IF I WANT!!!
extractdate <- function(date) {
day <- format(date, format="%d")
month <- format(date, format="%m")
year <- format(date, format="%Y")
cbind(day, month, year)
}
#making first calls
first_call<-extractdate(log_data$callTime)
#making last call
last_day <-substr(log_data$eventTime, 9, 10)
last_month <- substr(log_data$eventTime, 6, 7)
last_year <-substr(log_data$eventTime, 1, 4)
log_data<-cbind(log_data, first_call,last_day,last_month,last_year)
#Converting columns to numeric
log_data$day <-as.numeric(log_data$day)
log_data$last_day <- as.numeric(log_data$last_day)
log_data$month <-as.numeric(log_data$month)
log_data$last_month <- as.numeric(log_data$last_month)
log_data$year <- as.numeric(log_data$year)
log_data$last_year <- as.numeric(log_data$last_year )
log_data$year <- log_data$year +log_data$month/12
log_data$last_year <- log_data$last_year + log_data$last_month/12
log_data$caller_lifetime <- log_data$last_year - log_data$year
lang_spoken <- log_data %>%
group_by(callerId, langId) %>%
count()
#Distribution of languages spoken
ggplot(data=lang_spoken, aes(x=langId)) +
geom_bar(fill='red')+
geom_text(stat='count', aes(label=..count../16445), vjust=-1)+
ylim(0,600)+
labs(
title = 'Distribution of Languages by Caller
1 = Amharic, 2=Oromiffa, 3=Tigrigna, 4=Wolayitta, and 5=Sidamigna',
x = 'Language',
y= 'count'
)
#Distribution of time difference bewtween first and last call
lifetime<- log_data %>%
group_by(callerId, caller_lifetime) %>%
count()
ggplot(data=lifetime, aes(x=caller_lifetime)) +
geom_histogram(fill='brown', color='black')+
labs(
title = 'Distribution of Call Lifetimes',
x = 'Years between First and Last Call',
y= 'count'
)
#distribution of calls made
calls_made <- log_data %>%
group_by(callerId, noCallsMade) %>%
count()
ggplot(calls_made, aes(x=noCallsMade)) +
geom_histogram(color="black", fill="blue") +
xlim(0,350) +
labs(
title = 'Distribution of calls made per individual over lifetime (Outliers Excluded) \n
Min. 1st Qu.  Median  Mean   3rd Qu.    Max.
3.0    45.0    69.0     99.9    106.0    7110.0 ',
x = 'Total number of calls'
)
content_listened <- filter(log_data, grepl("CONTENT",logInfo))
content_listened <- filter(content_listened , !grepl("CONTENT MENU",logInfo))
content_listened <- filter(content_listened , !grepl("CONTENT IS NOT AVAILABLE",logInfo))
#Creating a content#_played column
content_listened$content_played <- ifelse(str_detect(content_listened$logInfo, 'CONTENT PLAYED', negate = FALSE),1,0)
content_listened$replay_request <- ifelse(str_detect(content_listened$logInfo, 'CONTENT REPLAY REQUESTED', negate = FALSE),1,0)
content_played<-aggregate(content_listened$content_played,list(content_listened$callerId), FUN=sum)
?rename
content_played <- content_played %>%
dplyr::rename(
con_play = x,
callerId = Group.1
)
content_replay<-aggregate(content_listened$replay_request,list(content_listened$callerId), FUN=sum)
content_replay <- content_replay %>%
dplyr::rename(
con_replay = x,
callerId = Group.1
)
content_counts <- cbind(content_played, content_replay)
content_counts$adjusted_con <- content_counts$con_play-content_counts$con_replay
content_counts$callerId <- NULL
summary(content_counts$adjusted_con)
#graphing the true distribution of content played
ggplot(content_counts, aes(x=adjusted_con)) +
geom_histogram(color="black", fill="green") +
xlim(0,100) +
labs(
title = 'Distribution of total Content listened to all Across all Calls (Outliers Excluded) \n
Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
0.00    3.00    8.00   17.79   20.00  279.00 ',
x = 'Total Content Listen Across Calls'
)
# Getting the number of calls per person
calls_made <- log_data %>%
dplyr::group_by(callId) %>%
count()
calls_made_id <- log_data %>%
dplyr::group_by(callId, callerId) %>%
count()
#join between tables
content_ratio <- left_join(calls_made_id, content_counts,by="callerId")
content_ratio[is.na(content_ratio)] <- 0
content_ratio <- content_ratio %>%
dplyr::group_by(callerId, con_play, con_replay, adjusted_con) %>%
count()
content_ratio$ratio <- content_ratio$adjusted_con/content_ratio$n
summary(content_ratio$ratio)
ggplot(content_ratio, aes(x=ratio)) +
geom_histogram(color="black", fill="red") +
xlim(0,2)+
labs(
title = 'Distribution of ratio of content listened to Calls (Outliers Excluded) \n
Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
0.0000  0.5614  1.0000  1.2500  1.5292 13.4000 ',
x = 'Content to Call Ratio'
)
sum(content_ratio$n)
#STARTING HERE IS FOR UNIQUE CALLERS
# filtering out top Menu keys
top_menu <-filter(log_data, grepl("TOP MENU",logInfo))
#cleaning the axis
top_menu$logInfo<- str_replace(top_menu$logInfo, "TOP MENU - ", "")
top_menu$logInfo<- str_replace(top_menu$logInfo, " PRESSED", "")
top_menu$logInfo<- str_replace(top_menu$logInfo, " PRESSED", "")
top_menu$logInfo<- str_replace(top_menu$logInfo, " SELECTED", "")
top_menu <- top_menu %>%
group_by(callerId, logInfo, langId) %>%
count()
ggplot(top_menu, aes(logInfo)) +
theme(axis.text.x = element_text(angle = 30, hjust =1))+
geom_bar()+
labs(
title = 'Distirution of TOP MENU items selected at least once by a unique caller',
x = 'TOP MENU options'
)
ggplot(top_menu, aes(langId, fill = logInfo)) +
geom_bar()+
labs(
title = 'Distirution of Languages divided by TOP MENU option
1 = Amharic, 2=Oromiffa, 3=Tigrigna, 4=Wolayitta, and 5=Sidamigna',
x = 'Language'
)
#STARTING HERE IS FOR UNIQUE CALLS
top_menu_call <-filter(log_data, grepl("TOP MENU",logInfo))
#cleaning the axis
top_menu_call$logInfo<- str_replace(top_menu_call$logInfo, "TOP MENU - ", "")
top_menu_call$logInfo<- str_replace(top_menu_call$logInfo, " PRESSED", "")
top_menu_call$logInfo<- str_replace(top_menu_call$logInfo, " PRESSED", "")
top_menu_call$logInfo<- str_replace(top_menu_call$logInfo, " SELECTED", "")
top_menu_call$logInfo<- str_replace(top_menu_call$logInfo, "RAIN OPTION", "RAIN")
top_menu_call$logInfo<- str_replace(top_menu_call$logInfo, "HHI OPTION", "HHI")
top_menu_call$logInfo<- str_replace(top_menu_call$logInfo, "LIVESTOCK OPTION", "LIVESTOCK")
top_menu_call$logInfo<- str_replace(top_menu_call$logInfo, "COVID OPTION", "COVID")
top_menu_call$logInfo<- str_replace(top_menu_call$logInfo, "RESET PROFILE OPTION", "NON-NUMERIC KEY")
top_menu_call$logInfo<- str_replace(top_menu_call$logInfo, "TOP MENU REPLAYED", "NON-NUMERIC KEY")
top_menu_call <- top_menu_call %>%
group_by(callId, logInfo) %>%
count()
top_menu_call<- top_menu_call[match(unique(top_menu_call$callId), top_menu_call$callId),]
ggplot(top_menu_call, aes(x=fct_infreq(logInfo))) +
theme(axis.text.x = element_text(angle = 30, hjust =1))+
geom_bar(color='black', fill='black')+
geom_text(stat='count', aes(label=..count..), vjust=-1)+
geom_text(aes(x='RAIN', y=200, label='Press 1'),color='#fcfff9')+
geom_text(aes(x='HHI', y=200, label='Press 2'),color='#fcfff9')+
geom_text(aes(x='LIVESTOCK', y=200, label='Press 3'),color='#fcfff9')+
geom_text(aes(x='COVID', y=200, label='Press 4'),color='#fcfff9')+
geom_text(aes(x='NON-NUMERIC KEY', y=200, label='Press #/*'),color='#fcfff9')+
ylim(0,4900)+
theme(axis.text.x = element_text(angle = 30, hjust =1),
plot.background = element_rect(fill = "#fcfff9"),
panel.background = element_rect(fill = "#fcfff9"),
panel.grid.major = element_line(size=.1,colour = "black"),
panel.grid.minor = element_line(size=.1,colour = "black"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())+
labs(
title = 'Distirution of Top Menu Options Selected per Call with Corresponding Button',
x = 'Top Menu Options',
y='Number of Times Selected'
)
# ggplot(data=HHI_menu_call, aes(x=fct_infreq(logInfo))) +
#   geom_bar(color='black', fill='#19723f',position = position_dodge( 0.3))+
#   geom_text(stat='count', aes(label=..count..), vjust=-1)+
#   geom_text(aes(x='PREPLANTING', y=50, label='Press 1'),color='#fcfff9')+
#   geom_text(aes(x='PLANTING', y=50, label='Press 2'),color='#fcfff9')+
#   geom_text(aes(x='HARROWING', y=50, label='Press 3'),color='#fcfff9')+
#   geom_text(aes(x='IRRIGATE CROPS', y=50, label='Press 4'),color='#fcfff9')+
#   geom_text(aes(x='PROTECT CROPS', y=50, label='Press 5'),color='#fcfff9')+
#   geom_text(aes(x='APPLY FERTILIZER', y=50, label='Press 6'),color='#fcfff9')+
#   geom_text(aes(x='HARVESTING', y=50, label='Press 7'),color='#fcfff9')+
#   geom_text(aes(x='NON-NUMERIC KEY', y=50, label='Press #/*'),color='#fcfff9')+
#   ylim(0,1250)+
#   theme(axis.text.x = element_text(angle = 30, hjust =1),
#         plot.background = element_rect(fill = "#fcfff9"),
#          panel.background = element_rect(fill = "#fcfff9"),
#         panel.grid.major = element_line(size=.1,colour = "black"),
#         panel.grid.minor = element_line(size=.1,colour = "black"),
#         panel.grid.major.x = element_blank(),
#         panel.grid.minor.x = element_blank())+
#   labs(
#     title = 'Distirution of HHI Menu Options Selected per Call with Corresponding Button',
#     x = 'HHI Menu Options',
#     y='Number of Times Selected'
#   )
View(top_menu_call)
#STARTING HERE IS FOR UNIQUE CALLERS
# filtering out top Menu keys
top_menu <-filter(log_data, grepl("TOP MENU",logInfo))
#cleaning the axis
top_menu$logInfo<- str_replace(top_menu$logInfo, "TOP MENU - ", "")
top_menu$logInfo<- str_replace(top_menu$logInfo, " PRESSED", "")
top_menu$logInfo<- str_replace(top_menu$logInfo, " PRESSED", "")
top_menu$logInfo<- str_replace(top_menu$logInfo, " SELECTED", "")
top_menu <- top_menu %>%
group_by(callerId, logInfo, langId) %>%
count()
ggplot(top_menu, aes(logInfo)) +
theme(axis.text.x = element_text(angle = 30, hjust =1))+
geom_bar()+
labs(
title = 'Distirution of TOP MENU items selected at least once by a unique caller',
x = 'TOP MENU options'
)
ggplot(top_menu, aes(langId, fill = logInfo)) +
geom_bar()+
labs(
title = 'Distirution of Languages divided by TOP MENU option
1 = Amharic, 2=Oromiffa, 3=Tigrigna, 4=Wolayitta, and 5=Sidamigna',
x = 'Language'
)
#STARTING HERE IS FOR UNIQUE CALLS
top_menu_call <-filter(log_data, grepl("TOP MENU",logInfo))
#cleaning the axis
top_menu_call$logInfo<- str_replace(top_menu_call$logInfo, "TOP MENU - ", "")
top_menu_call$logInfo<- str_replace(top_menu_call$logInfo, " PRESSED", "")
top_menu_call$logInfo<- str_replace(top_menu_call$logInfo, " PRESSED", "")
top_menu_call$logInfo<- str_replace(top_menu_call$logInfo, " SELECTED", "")
top_menu_call$logInfo<- str_replace(top_menu_call$logInfo, "RAIN OPTION", "RAIN")
top_menu_call$logInfo<- str_replace(top_menu_call$logInfo, "HHI OPTION", "HHI")
top_menu_call$logInfo<- str_replace(top_menu_call$logInfo, "LIVESTOCK OPTION", "LIVESTOCK")
top_menu_call$logInfo<- str_replace(top_menu_call$logInfo, "COVID OPTION", "COVID")
top_menu_call$logInfo<- str_replace(top_menu_call$logInfo, "RESET PROFILE OPTION", "NON-NUMERIC KEY")
top_menu_call$logInfo<- str_replace(top_menu_call$logInfo, "TOP MENU REPLAYED", "NON-NUMERIC KEY")
top_menu_call <- top_menu_call %>%
group_by(callId, logInfo) %>%
count()
top_menu_call<- top_menu_call[match(unique(top_menu_call$callId), top_menu_call$callId),]
ggplot(top_menu_call, aes(x=fct_infreq(logInfo))) +
theme(axis.text.x = element_text(angle = 30, hjust =1))+
geom_bar(color='black', fill='black')+
geom_text(stat='count', aes(label=..count..), vjust=-1)+
geom_text(aes(x='RAIN', y=200, label='Press 1'),color='#fcfff9')+
geom_text(aes(x='HHI', y=200, label='Press 2'),color='#fcfff9')+
geom_text(aes(x='LIVESTOCK', y=200, label='Press 3'),color='#fcfff9')+
geom_text(aes(x='COVID', y=200, label='Press 4'),color='#fcfff9')+
geom_text(aes(x='NON-NUMERIC KEY', y=200, label='Press #/*'),color='#fcfff9')+
ylim(0,4900)+
theme(axis.text.x = element_text(angle = 30, hjust =1),
plot.background = element_rect(fill = "#fcfff9"),
panel.background = element_rect(fill = "#fcfff9"),
panel.grid.major = element_line(size=.1,colour = "black"),
panel.grid.minor = element_line(size=.1,colour = "black"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())+
labs(
title = 'Distirution of Top Menu Options Selected per Call with Corresponding Button',
x = 'Top Menu Options',
y='Number of Times Selected'
)
# ggplot(data=HHI_menu_call, aes(x=fct_infreq(logInfo))) +
#   geom_bar(color='black', fill='#19723f',position = position_dodge( 0.3))+
#   geom_text(stat='count', aes(label=..count..), vjust=-1)+
#   geom_text(aes(x='PREPLANTING', y=50, label='Press 1'),color='#fcfff9')+
#   geom_text(aes(x='PLANTING', y=50, label='Press 2'),color='#fcfff9')+
#   geom_text(aes(x='HARROWING', y=50, label='Press 3'),color='#fcfff9')+
#   geom_text(aes(x='IRRIGATE CROPS', y=50, label='Press 4'),color='#fcfff9')+
#   geom_text(aes(x='PROTECT CROPS', y=50, label='Press 5'),color='#fcfff9')+
#   geom_text(aes(x='APPLY FERTILIZER', y=50, label='Press 6'),color='#fcfff9')+
#   geom_text(aes(x='HARVESTING', y=50, label='Press 7'),color='#fcfff9')+
#   geom_text(aes(x='NON-NUMERIC KEY', y=50, label='Press #/*'),color='#fcfff9')+
#   ylim(0,1250)+
#   theme(axis.text.x = element_text(angle = 30, hjust =1),
#         plot.background = element_rect(fill = "#fcfff9"),
#          panel.background = element_rect(fill = "#fcfff9"),
#         panel.grid.major = element_line(size=.1,colour = "black"),
#         panel.grid.minor = element_line(size=.1,colour = "black"),
#         panel.grid.major.x = element_blank(),
#         panel.grid.minor.x = element_blank())+
#   labs(
#     title = 'Distirution of HHI Menu Options Selected per Call with Corresponding Button',
#     x = 'HHI Menu Options',
#     y='Number of Times Selected'
#   )
#STARTING HERE IS FOR UNIQUE CALLERS
# filtering out top Menu keys
top_menu <-filter(log_data, grepl("TOP MENU",logInfo))
#cleaning the axis
top_menu$logInfo<- str_replace(top_menu$logInfo, "TOP MENU - ", "")
top_menu$logInfo<- str_replace(top_menu$logInfo, " PRESSED", "")
top_menu$logInfo<- str_replace(top_menu$logInfo, " PRESSED", "")
top_menu$logInfo<- str_replace(top_menu$logInfo, " SELECTED", "")
top_menu <- top_menu %>%
group_by(callerId, logInfo, langId) %>%
count()
ggplot(top_menu, aes(logInfo)) +
theme(axis.text.x = element_text(angle = 30, hjust =1))+
geom_bar()+
labs(
title = 'Distirution of TOP MENU items selected at least once by a unique caller',
x = 'TOP MENU options'
)
ggplot(top_menu, aes(langId, fill = logInfo)) +
geom_bar()+
labs(
title = 'Distirution of Languages divided by TOP MENU option
1 = Amharic, 2=Oromiffa, 3=Tigrigna, 4=Wolayitta, and 5=Sidamigna',
x = 'Language'
)
#STARTING HERE IS FOR UNIQUE CALLS
top_menu_call <-filter(log_data, grepl("TOP MENU",logInfo))
#cleaning the axis
top_menu_call$logInfo<- str_replace(top_menu_call$logInfo, "TOP MENU - ", "")
top_menu_call$logInfo<- str_replace(top_menu_call$logInfo, " PRESSED", "")
top_menu_call$logInfo<- str_replace(top_menu_call$logInfo, " PRESSED", "")
top_menu_call$logInfo<- str_replace(top_menu_call$logInfo, " SELECTED", "")
top_menu_call$logInfo<- str_replace(top_menu_call$logInfo, "RAIN OPTION", "RAIN")
top_menu_call$logInfo<- str_replace(top_menu_call$logInfo, "HHI OPTION", "HHI")
top_menu_call$logInfo<- str_replace(top_menu_call$logInfo, "LIVESTOCK OPTION", "LIVESTOCK")
top_menu_call$logInfo<- str_replace(top_menu_call$logInfo, "COVID OPTION", "COVID")
top_menu_call$logInfo<- str_replace(top_menu_call$logInfo, "RESET PROFILE OPTION", "NON-NUMERIC KEY")
top_menu_call$logInfo<- str_replace(top_menu_call$logInfo, "TOP MENU REPLAYED", "NON-NUMERIC KEY")
top_menu_call$logInfo<- str_replace(top_menu_call$logInfo, "TOP MENU INVALID KEY", "NON-NUMERIC KEY")
top_menu_call <- top_menu_call %>%
group_by(callId, logInfo) %>%
count()
top_menu_call<- top_menu_call[match(unique(top_menu_call$callId), top_menu_call$callId),]
ggplot(top_menu_call, aes(x=fct_infreq(logInfo))) +
theme(axis.text.x = element_text(angle = 30, hjust =1))+
geom_bar(color='black', fill='black')+
geom_text(stat='count', aes(label=..count..), vjust=-1)+
geom_text(aes(x='RAIN', y=200, label='Press 1'),color='#fcfff9')+
geom_text(aes(x='HHI', y=200, label='Press 2'),color='#fcfff9')+
geom_text(aes(x='LIVESTOCK', y=200, label='Press 3'),color='#fcfff9')+
geom_text(aes(x='COVID', y=200, label='Press 4'),color='#fcfff9')+
geom_text(aes(x='NON-NUMERIC KEY', y=200, label='Press #/*'),color='#fcfff9')+
ylim(0,5000)+
theme(axis.text.x = element_text(angle = 30, hjust =1),
plot.background = element_rect(fill = "#fcfff9"),
panel.background = element_rect(fill = "#fcfff9"),
panel.grid.major = element_line(size=.1,colour = "black"),
panel.grid.minor = element_line(size=.1,colour = "black"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())+
labs(
title = 'Distirution of Top Menu Options Selected per Call with Corresponding Button',
x = 'Top Menu Options',
y='Number of Times Selected'
)
# ggplot(data=HHI_menu_call, aes(x=fct_infreq(logInfo))) +
#   geom_bar(color='black', fill='#19723f',position = position_dodge( 0.3))+
#   geom_text(stat='count', aes(label=..count..), vjust=-1)+
#   geom_text(aes(x='PREPLANTING', y=50, label='Press 1'),color='#fcfff9')+
#   geom_text(aes(x='PLANTING', y=50, label='Press 2'),color='#fcfff9')+
#   geom_text(aes(x='HARROWING', y=50, label='Press 3'),color='#fcfff9')+
#   geom_text(aes(x='IRRIGATE CROPS', y=50, label='Press 4'),color='#fcfff9')+
#   geom_text(aes(x='PROTECT CROPS', y=50, label='Press 5'),color='#fcfff9')+
#   geom_text(aes(x='APPLY FERTILIZER', y=50, label='Press 6'),color='#fcfff9')+
#   geom_text(aes(x='HARVESTING', y=50, label='Press 7'),color='#fcfff9')+
#   geom_text(aes(x='NON-NUMERIC KEY', y=50, label='Press #/*'),color='#fcfff9')+
#   ylim(0,1250)+
#   theme(axis.text.x = element_text(angle = 30, hjust =1),
#         plot.background = element_rect(fill = "#fcfff9"),
#          panel.background = element_rect(fill = "#fcfff9"),
#         panel.grid.major = element_line(size=.1,colour = "black"),
#         panel.grid.minor = element_line(size=.1,colour = "black"),
#         panel.grid.major.x = element_blank(),
#         panel.grid.minor.x = element_blank())+
#   labs(
#     title = 'Distirution of HHI Menu Options Selected per Call with Corresponding Button',
#     x = 'HHI Menu Options',
#     y='Number of Times Selected'
#   )
ggplot(top_menu_call, aes(x=fct_infreq(logInfo))) +
theme(axis.text.x = element_text(angle = 30, hjust =1))+
geom_bar(color='black', fill='black')+
geom_text(stat='count', aes(label=..count..), vjust=-1)+
geom_text(aes(x='RAIN', y=200, label='Press 1'),color='#fcfff9')+
geom_text(aes(x='HHI', y=200, label='Press 2'),color='#fcfff9')+
geom_text(aes(x='LIVESTOCK', y=200, label='Press 3'),color='#fcfff9')+
geom_text(aes(x='COVID', y=500, label='Press 4'),color='black')+
geom_text(aes(x='NON-NUMERIC KEY', y=200, label='Press #/*'),color='#fcfff9')+
ylim(0,5000)+
theme(axis.text.x = element_text(angle = 30, hjust =1),
plot.background = element_rect(fill = "#fcfff9"),
panel.background = element_rect(fill = "#fcfff9"),
panel.grid.major = element_line(size=.1,colour = "black"),
panel.grid.minor = element_line(size=.1,colour = "black"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())+
labs(
title = 'Distirution of Top Menu Options Selected per Call with Corresponding Button',
x = 'Top Menu Options',
y='Number of Times Selected'
)
ggplot(top_menu_call, aes(x=fct_infreq(logInfo))) +
theme(axis.text.x = element_text(angle = 30, hjust =1))+
geom_bar(color='black', fill='black')+
geom_text(stat='count', aes(label=..count..), vjust=-1)+
geom_text(aes(x='RAIN', y=200, label='Press 1'),color='#fcfff9')+
geom_text(aes(x='HHI', y=200, label='Press 2'),color='#fcfff9')+
geom_text(aes(x='LIVESTOCK', y=200, label='Press 3'),color='#fcfff9')+
geom_text(aes(x='COVID', y=800, label='Press 4'),color='black')+
geom_text(aes(x='NON-NUMERIC KEY', y=200, label='Press #/*'),color='#fcfff9')+
ylim(0,5000)+
theme(axis.text.x = element_text(angle = 30, hjust =1),
plot.background = element_rect(fill = "#fcfff9"),
panel.background = element_rect(fill = "#fcfff9"),
panel.grid.major = element_line(size=.1,colour = "black"),
panel.grid.minor = element_line(size=.1,colour = "black"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())+
labs(
title = 'Distirution of Top Menu Options Selected per Call with Corresponding Button',
x = 'Top Menu Options',
y='Number of Times Selected'
)
ggplot(top_menu_call, aes(x=fct_infreq(logInfo))) +
theme(axis.text.x = element_text(angle = 30, hjust =1))+
geom_bar(color='black', fill='black')+
geom_text(stat='count', aes(label=..count..), vjust=-1)+
geom_text(aes(x='RAIN', y=200, label='Press 1'),color='#fcfff9')+
geom_text(aes(x='HHI', y=200, label='Press 2'),color='#fcfff9')+
geom_text(aes(x='LIVESTOCK', y=200, label='Press 3'),color='#fcfff9')+
geom_text(aes(x='COVID', y=750, x = 300 label='Press 4'),color='black')+
ggplot(top_menu_call, aes(x=fct_infreq(logInfo))) +
theme(axis.text.x = element_text(angle = 30, hjust =1))+
geom_bar(color='black', fill='black')+
geom_text(stat='count', aes(label=..count..), vjust=-1)+
geom_text(aes(x='RAIN', y=200, label='Press 1'),color='#fcfff9')+
geom_text(aes(x='HHI', y=200, label='Press 2'),color='#fcfff9')+
geom_text(aes(x='LIVESTOCK', y=200, label='Press 3'),color='#fcfff9')+
geom_text(aes(x='COVID', y=750, x = 300, label='Press 4'),color='black')+
geom_text(aes(x='NON-NUMERIC KEY', y=200, label='Press #/*'),color='#fcfff9')+
ylim(0,5000)+
theme(axis.text.x = element_text(angle = 30, hjust =1),
plot.background = element_rect(fill = "#fcfff9"),
panel.background = element_rect(fill = "#fcfff9"),
panel.grid.major = element_line(size=.1,colour = "black"),
panel.grid.minor = element_line(size=.1,colour = "black"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())+
labs(
title = 'Distirution of Top Menu Options Selected per Call with Corresponding Button',
x = 'Top Menu Options',
y='Number of Times Selected'
)
ggplot(top_menu_call, aes(x=fct_infreq(logInfo))) +
theme(axis.text.x = element_text(angle = 30, hjust =1))+
geom_bar(color='black', fill='black')+
geom_text(stat='count', aes(label=..count..), vjust=-1)+
geom_text(aes(x='RAIN', y=200, label='Press 1'),color='#fcfff9')+
geom_text(aes(x='HHI', y=200, label='Press 2'),color='#fcfff9')+
geom_text(aes(x='LIVESTOCK', y=200, label='Press 3'),color='#fcfff9')+
geom_text(aes(x='COVID', y=750, label='Press 4',position = position_nudge(x=10)),color='black')+
geom_text(aes(x='NON-NUMERIC KEY', y=200, label='Press #/*'),color='#fcfff9')+
ylim(0,5000)+
theme(axis.text.x = element_text(angle = 30, hjust =1),
plot.background = element_rect(fill = "#fcfff9"),
panel.background = element_rect(fill = "#fcfff9"),
panel.grid.major = element_line(size=.1,colour = "black"),
panel.grid.minor = element_line(size=.1,colour = "black"),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())+
labs(
title = 'Distirution of Top Menu Options Selected per Call with Corresponding Button',
x = 'Top Menu Options',
y='Number of Times Selected'
)
